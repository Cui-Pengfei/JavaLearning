package cpf.learn.chapter10.static_;

/**
 * 静态方法的使用
 *      1.当方法中不涉及任何与对象相关的成员时，最好就把方法设计成静态的，以提高开发效率
 *      2.在实际开发中，经常把一些通用的方法，设计成静态方法，例如工具类的方法一般都是静态方法
 *      3.类方法和普通方法都是随着类的加载而加载，将结构信息存储在方法区：
 *          类方法中无this的参数（this不是静态的，只有对象存在时，才存在this）
 *          而且类方法中如果想使用其他类变量直接用【类名.类变量】即可...
 *      4.静态方法只能访问静态成员；非静态方法即可以访问静态成员，也可以访问非静态成员。
 *          这非常好理解，因为静态方法在类加载时便会加载使用，
 *          而非静态成员中的普通属性只会在对象创建的时候初始化，类加载时根本用不成。
 *      5.构造器隐式地也是static的，但是他很特殊，因为调用构造器意味着会有对象的产生，
 *          又因为构造器的主要作用是为了给属性赋值，因为构造器是一个包含this参数的隐式静态的方法。
 */
public class StaticMethod{
}
